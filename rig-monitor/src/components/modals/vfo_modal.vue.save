<template>
    <b-modal
        id="new-freq"
        size="sm"
        @ok="freqHandleOk"
        @shown="freqFocusInput"
        v-model="modal.open.frequency"
        title="Set {{ modal.desc }}"
    >
        <b-form-group
            label="Freq:"
            label-for="freq-input"
            invalid-feedback="Invalid frequency"
            :state="freqInputState"
        >
            <b-form-input
                id="freq-input"
                @keyup.enter="freqHandleOk"
                v-model="modal.value"
                :state="freqInputState"
                required
            ></b-form-input>
            <!-- <b-form-input
                id="freq-input"
                ref="freqInput"
                @keyup.enter="freqHandleOk"
                v-model="freqInput"
                :state="freqInputState"
                required
            ></b-form-input> -->
        </b-form-group>
    </b-modal>
</template>

<script setup>
import { ref } from 'vue';
import { send_command } from '@/js/web_socket.js';
import freq_utils from '@/js/freq_utils.js';
import { useGlobalStore } from '@/stores/global';

const modal = useGlobalStore().modal;

const freq_model = ref(true);
const freqInputState = ref(null);

const freqResetModal = () => {
    modal.open.frequency = false;
};

const freqHandleOk = (e) => {
    var new_freq = freq_utils.conv_freq(modal.value);

    if(new_freq) {
        freqResetModal();
        send_command(modal.name, new_freq);
    }
    else {
        freqInputState.value = false;
        e.preventDefault();
    }
};

const freqFocusInput = () => {
    // this.$refs.freqInput.focus();
    // this.$refs.freqInput.select();
};
</script>
